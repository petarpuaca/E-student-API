// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PukiAPI.Data;

#nullable disable

namespace PukiAPI.Migrations
{
    [DbContext(typeof(PUKIDbContext))]
    [Migration("20250715144736_initial Migration")]
    partial class initialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PukiAPI.Models.Domain.Predmet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ESPB")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Predmeti");
                });

            modelBuilder.Entity("PukiAPI.Models.Domain.Profesor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Profesori");
                });

            modelBuilder.Entity("PukiAPI.Models.Domain.ProfesorPredmet", b =>
                {
                    b.Property<Guid>("ProfesorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PredmetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProfesorId", "PredmetId");

                    b.HasIndex("PredmetId");

                    b.ToTable("ProfesorPredmeti");
                });

            modelBuilder.Entity("PukiAPI.Models.Domain.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Index")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Smer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Studenti");
                });

            modelBuilder.Entity("PukiAPI.Models.Domain.StudentPredmet", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PredmetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Ocena")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "PredmetId");

                    b.HasIndex("PredmetId");

                    b.ToTable("StudentPredmeti");
                });

            modelBuilder.Entity("PukiAPI.Models.Domain.ProfesorPredmet", b =>
                {
                    b.HasOne("PukiAPI.Models.Domain.Predmet", "Predmet")
                        .WithMany("ProfesorPredmeti")
                        .HasForeignKey("PredmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PukiAPI.Models.Domain.Profesor", "Profesor")
                        .WithMany("ProfesorPredmeti")
                        .HasForeignKey("ProfesorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Predmet");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("PukiAPI.Models.Domain.StudentPredmet", b =>
                {
                    b.HasOne("PukiAPI.Models.Domain.Predmet", "Predmet")
                        .WithMany("StudentPredmeti")
                        .HasForeignKey("PredmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PukiAPI.Models.Domain.Student", "Student")
                        .WithMany("StudentPredmeti")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Predmet");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("PukiAPI.Models.Domain.Predmet", b =>
                {
                    b.Navigation("ProfesorPredmeti");

                    b.Navigation("StudentPredmeti");
                });

            modelBuilder.Entity("PukiAPI.Models.Domain.Profesor", b =>
                {
                    b.Navigation("ProfesorPredmeti");
                });

            modelBuilder.Entity("PukiAPI.Models.Domain.Student", b =>
                {
                    b.Navigation("StudentPredmeti");
                });
#pragma warning restore 612, 618
        }
    }
}
